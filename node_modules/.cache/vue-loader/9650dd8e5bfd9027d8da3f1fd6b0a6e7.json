{"remainingRequest":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/donut.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/donut.vue","mtime":1636589830034},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGFtNGNvcmUgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC9jb3JlJwppbXBvcnQgKiBhcyBhbTRjaGFydHMgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC9jaGFydHMnCmltcG9ydCBhbTR0aGVtZXNBbmltYXRlZCBmcm9tICdAYW1jaGFydHMvYW1jaGFydHM0L3RoZW1lcy9hbmltYXRlZCcKaW1wb3J0IG1haW5BcGkgZnJvbSAnLi4vYXBpcy9tYWluQXBpJwovLyBpbXBvcnQgZGFzaGJvYXJkQXBpIGZyb20gJy4uLy4uL2FwaXMvZGFzaGJvYXJkL2Rhc2hib2FyZC1hcGknCmFtNGNvcmUuYWRkTGljZW5zZSgnQ0gxMjM0NTY3JykKYW00Y29yZS51c2VUaGVtZShhbTR0aGVtZXNBbmltYXRlZCkKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZG91Z2hudXQtY2hhcnQnLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGxhYmVsRm9yQ2hhcnQ6ICdEVVRZJywKICAgICAgZmlyOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICAgY291bnRyeTogJ0FjdGl2ZScsCiAgICAgICAgICAgICAgbGl0cmVzOiA4CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAgIGNvdW50cnk6ICdJbmFjdGl2ZScsCiAgICAgICAgICAgICAgbGl0cmVzOiAyCiAgICAgICAgICB9CiAgICAgIF0KICAgIH0KICB9LAogIHByb3BzOiB7CiAgICAvLyBmaXI6IHsKICAgIC8vICAgdHlwZTogQXJyYXksCiAgICAvLyAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICAvLyB9LAogICAgaXNQaWU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGxlZ2VuZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICdjaXJjbGUnLAogICAgICB2YWxpZGF0b3I6IHZhbCA9PiBbJ3NxdWFyZScsICdjaXJjbGUnXS5pbmNsdWRlcyh2YWwpCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8gICB0aGlzLmNvdW50c0dldCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAgIGNvdW50c0dldCgpIHsKICAgICAgICBtYWluQXBpLmdldEFjdGl2ZSgpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZmlyWzBdLmNvdW50cnkgPSAnQWN0aXZlJwogICAgICAgICAgICB0aGlzLmZpclswXS5saXRyZXMgPSByZXNwb25zZS5kYXRhLnRvdGFsU2l6ZQogICAgICAgIH0pCiAgICAgICAgbWFpbkFwaS5nZXRJbmFjdGl2ZSgpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZmlyWzFdLmNvdW50cnkgPSAnSW5hY3RpdmUnCiAgICAgICAgICAgIHRoaXMuZmlyWzFdLmxpdHJlcyA9IHJlc3BvbnNlLmRhdGEudG90YWxTaXplCiAgICAgICAgfSkKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmZpcikKICAgICAgfSwKICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy5jb3VudHNHZXQoKQogICAgY29uc3QgY29udGFpbmVyID0gYW00Y29yZS5jcmVhdGUodGhpcy4kcmVmcy5jaGFydGRpdiwgYW00Y29yZS5Db250YWluZXIpCiAgICBjb250YWluZXIud2lkdGggPSBhbTRjb3JlLnBlcmNlbnQoMTAwKQogICAgY29udGFpbmVyLmhlaWdodCA9IGFtNGNvcmUucGVyY2VudCgxMDApCiAgICBjb250YWluZXIubGF5b3V0ID0gJ2hvcml6b250YWwnCgogICAgLy8gQ3JlYXRlIHN1Yi1jb250YWluZXJzCiAgICBjb25zdCBsZWdlbmRDb250YWluZXIgPSBjb250YWluZXIuY3JlYXRlQ2hpbGQoYW00Y29yZS5Db250YWluZXIpCiAgICBsZWdlbmRDb250YWluZXIubGF5b3V0ID0gJ2Fic29sdXRlJyAvLyBMYXlvdXQgb2YgbGVnZW5kIGNvbnRhaW5lciBzaG91bGQgYmUgYWJzb2x1dGUgc28gdGhhdCBsZWdlbmRzIGNhbiBiZSBjZW50ZXJlZCB1c2luZyB0aGUgbGVnZW5kcyBhbGlnbiBwcm9wZXJ0eQogICAgbGVnZW5kQ29udGFpbmVyLndpZHRoID0gYW00Y29yZS5wZXJjZW50KDUwKQogICAgbGVnZW5kQ29udGFpbmVyLmhlaWdodCA9IGFtNGNvcmUucGVyY2VudCgxMDApCgogICAgY29uc3QgY2hhcnQgPSBjb250YWluZXIuY3JlYXRlQ2hpbGQoYW00Y2hhcnRzLlBpZUNoYXJ0KQogICAgY2hhcnQud2lkdGggPSBhbTRjb3JlLnBlcmNlbnQoNTApCiAgICBjaGFydC5oZWlnaHQgPSBhbTRjb3JlLnBlcmNlbnQoMTAwKQogICAgY2hhcnQucmVzcG9uc2l2ZS5lbmFibGVkID0gdHJ1ZQogICAgdGhpcy5jaGFydCA9IGNoYXJ0CiAgICBjaGFydC5kYXRhID0gdGhpcy5maXIKICAgIC8vIExlZ2VuZAogICAgY2hhcnQubGVnZW5kID0gbmV3IGFtNGNoYXJ0cy5MZWdlbmQoKQogICAgY2hhcnQubGVnZW5kLnBvc2l0aW9uID0gJ2xlZnQnIC8vIFRoaXMgaXMgdG8ga2VlcCBlYWNoIGxlZ2VuZCBvbiBpdHMgb3duIGxpbmUKICAgIGNoYXJ0LmxlZ2VuZC5wYXJlbnQgPSBsZWdlbmRDb250YWluZXIKICAgIGNoYXJ0LmxlZ2VuZC5mb250U2l6ZSA9IDEyCiAgICBjaGFydC5sZWdlbmQubGFiZWxzLnRlbXBsYXRlLndyYXAgPSB0cnVlCiAgICBjaGFydC5sZWdlbmQubGFiZWxzLnRlbXBsYXRlLnRydW5jYXRlID0gZmFsc2UKICAgIGNoYXJ0LmxlZ2VuZC5sYWJlbHMudGVtcGxhdGUuZmlsbCA9IGFtNGNvcmUuY29sb3IoJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSknKQogICAgY2hhcnQubGVnZW5kLnZhbHVlTGFiZWxzLnRlbXBsYXRlLmZpbGwgPSBhbTRjb3JlLmNvbG9yKCdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpJykKCiAgICBjaGFydC5sZWdlbmQudmFsaWduID0gJ21pZGRsZScKICAgIGNoYXJ0LmxlZ2VuZC5tYXhIZWlnaHQgPSAxMDAKICAgIGNoYXJ0LmxlZ2VuZC5zY3JvbGxhYmxlID0gdHJ1ZQogICAgY2hhcnQubGVnZW5kLmNvbnRlbnRBbGlnbiA9ICdsZWZ0JwoKICAgIGNvbnN0IG1hcmtlciA9IGNoYXJ0LmxlZ2VuZC5tYXJrZXJzLnRlbXBsYXRlLmNoaWxkcmVuLmdldEluZGV4KDApCiAgICBtYXJrZXIuY29ybmVyUmFkaXVzKDEyLCAxMiwgMTIsIDEyKQogICAgbWFya2VyLnN0cm9rZVdpZHRoID0gMgogICAgbWFya2VyLnN0cm9rZSA9IGFtNGNvcmUuY29sb3IoJyNjY2MnKQogICAgLy8gbWFya2VyLnN0cm9rZU9wYWNpdHkgPSAxCgogICAgY29uc3QgbWFya2VyVGVtcGxhdGUgPSBjaGFydC5sZWdlbmQubWFya2Vycy50ZW1wbGF0ZQogICAgbWFya2VyVGVtcGxhdGUud2lkdGggPSAxMAogICAgbWFya2VyVGVtcGxhdGUuaGVpZ2h0ID0gMTAKCiAgICAvLyBBZGQgYW5kIGNvbmZpZ3VyZSBTZXJpZXMKICAgIGNvbnN0IHBpZVNlcmllcyA9IGNoYXJ0LnNlcmllcy5wdXNoKG5ldyBhbTRjaGFydHMuUGllU2VyaWVzKCkpCiAgICBwaWVTZXJpZXMuZGF0YUZpZWxkcy52YWx1ZSA9ICJsaXRyZXMiOwogICAgcGllU2VyaWVzLmRhdGFGaWVsZHMuY2F0ZWdvcnkgPSAiY291bnRyeSI7CiAgICBwaWVTZXJpZXMuc2xpY2VzLnRlbXBsYXRlLnByb3BlcnR5RmllbGRzLmZpbGwgPSAnY29sb3InCgogICAgLy8gdG8gZGlzYWJsZSBhcnJvd3MKICAgIHBpZVNlcmllcy5sYWJlbHMudGVtcGxhdGUuZGlzYWJsZWQgPSB0cnVlCiAgICBwaWVTZXJpZXMudGlja3MudGVtcGxhdGUuZGlzYWJsZWQgPSB0cnVlCgogICAgLy8gdG8gcHJpbnQgdmFsdWVzIGluc3RlYWQgb2YgcGVyY2VudAogICAgcGllU2VyaWVzLmxlZ2VuZFNldHRpbmdzLnZhbHVlVGV4dCA9ICcoe3ZhbHVlfSknCgogICAgaWYgKCF0aGlzLmlzUGllKSB7CiAgICAvLyBMZXQncyBjdXQgYSBob2xlIGluIG91ciBQaWUgY2hhcnQgdGhlIHNpemUgb2YgNDAlIHRoZSByYWRpdXMKICAgICAgY2hhcnQuaW5uZXJSYWRpdXMgPSBhbTRjb3JlLnBlcmNlbnQoNTApCiAgICAgIC8vIGxhYmVsIGluIGNlbnRlcgogICAgICBjb25zdCBsYWJlbCA9IHBpZVNlcmllcy5jcmVhdGVDaGlsZChhbTRjb3JlLkxhYmVsKQogICAgICBsYWJlbC50ZXh0ID0gJ3t2YWx1ZXMudmFsdWUuc3VtfScKICAgICAgbGFiZWwuaG9yaXpvbnRhbENlbnRlciA9ICdtaWRkbGUnCiAgICAgIGxhYmVsLnZlcnRpY2FsQ2VudGVyID0gJ21pZGRsZScKICAgICAgbGFiZWwuZm9udFNpemUgPSAyMAogICAgICBsYWJlbC5maWxsID0gYW00Y29yZS5jb2xvcignIzNCQUZEQScpCiAgICB9CgogICAgZnVuY3Rpb24gYW00dGhlbWVzTXlUaGVtZSAodGFyZ2V0KSB7CiAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBhbTRjb3JlLkNvbG9yU2V0KSB7CiAgICAgICAgdGFyZ2V0Lmxpc3QgPSBbCiAgICAgICAgICBhbTRjb3JlLmNvbG9yKCcjNkRGMDAyJyksCiAgICAgICAgICBhbTRjb3JlLmNvbG9yKCcjMUFDOUU2JyksCiAgICAgICAgICBhbTRjb3JlLmNvbG9yKCcjMURFNEJEJyksCiAgICAgICAgICBhbTRjb3JlLmNvbG9yKCcjMTc2QkEwJyksCiAgICAgICAgICBhbTRjb3JlLmNvbG9yKCcjMTQyNDU5JykKICAgICAgICAgIC8vIGFtNGNvcmUuY29sb3IoJyMxOUFBREUnKQogICAgICAgIF0KICAgICAgfQogICAgfQoKICAgIGFtNGNvcmUudXNlVGhlbWUoYW00dGhlbWVzTXlUaGVtZSkKICB9LAoKICBiZWZvcmVEZXN0cm95ICgpIHsKICAgIGlmICh0aGlzLmNoYXJ0KSB7CiAgICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["donut.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"donut.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"dougnut chart-container\" ref=\"chartdiv\">{{ fir }}</div>\n</template>\n\n<script>\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated'\nimport mainApi from '../apis/mainApi'\n// import dashboardApi from '../../apis/dashboard/dashboard-api'\nam4core.addLicense('CH1234567')\nam4core.useTheme(am4themesAnimated)\n\nexport default {\n  name: 'doughnut-chart',\n  data () {\n    return {\n      chart: null,\n      labelForChart: 'DUTY',\n      fir: [\n          {\n              country: 'Active',\n              litres: 8\n          },\n          {\n              country: 'Inactive',\n              litres: 2\n          }\n      ]\n    }\n  },\n  props: {\n    // fir: {\n    //   type: Array,\n    //   default: () => []\n    // },\n    isPie: {\n      type: Boolean,\n      default: true\n    },\n    legend: {\n      type: String,\n      default: () => 'circle',\n      validator: val => ['square', 'circle'].includes(val)\n    }\n  },\n  created() {\n    //   this.countsGet()\n  },\n  methods: {\n      countsGet() {\n        mainApi.getActive().then((response) => {\n            this.fir[0].country = 'Active'\n            this.fir[0].litres = response.data.totalSize\n        })\n        mainApi.getInactive().then((response) => {\n            this.fir[1].country = 'Inactive'\n            this.fir[1].litres = response.data.totalSize\n        })\n        console.log(this.fir)\n      },\n  },\n  mounted () {\n    this.countsGet()\n    const container = am4core.create(this.$refs.chartdiv, am4core.Container)\n    container.width = am4core.percent(100)\n    container.height = am4core.percent(100)\n    container.layout = 'horizontal'\n\n    // Create sub-containers\n    const legendContainer = container.createChild(am4core.Container)\n    legendContainer.layout = 'absolute' // Layout of legend container should be absolute so that legends can be centered using the legends align property\n    legendContainer.width = am4core.percent(50)\n    legendContainer.height = am4core.percent(100)\n\n    const chart = container.createChild(am4charts.PieChart)\n    chart.width = am4core.percent(50)\n    chart.height = am4core.percent(100)\n    chart.responsive.enabled = true\n    this.chart = chart\n    chart.data = this.fir\n    // Legend\n    chart.legend = new am4charts.Legend()\n    chart.legend.position = 'left' // This is to keep each legend on its own line\n    chart.legend.parent = legendContainer\n    chart.legend.fontSize = 12\n    chart.legend.labels.template.wrap = true\n    chart.legend.labels.template.truncate = false\n    chart.legend.labels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n    chart.legend.valueLabels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n\n    chart.legend.valign = 'middle'\n    chart.legend.maxHeight = 100\n    chart.legend.scrollable = true\n    chart.legend.contentAlign = 'left'\n\n    const marker = chart.legend.markers.template.children.getIndex(0)\n    marker.cornerRadius(12, 12, 12, 12)\n    marker.strokeWidth = 2\n    marker.stroke = am4core.color('#ccc')\n    // marker.strokeOpacity = 1\n\n    const markerTemplate = chart.legend.markers.template\n    markerTemplate.width = 10\n    markerTemplate.height = 10\n\n    // Add and configure Series\n    const pieSeries = chart.series.push(new am4charts.PieSeries())\n    pieSeries.dataFields.value = \"litres\";\n    pieSeries.dataFields.category = \"country\";\n    pieSeries.slices.template.propertyFields.fill = 'color'\n\n    // to disable arrows\n    pieSeries.labels.template.disabled = true\n    pieSeries.ticks.template.disabled = true\n\n    // to print values instead of percent\n    pieSeries.legendSettings.valueText = '({value})'\n\n    if (!this.isPie) {\n    // Let's cut a hole in our Pie chart the size of 40% the radius\n      chart.innerRadius = am4core.percent(50)\n      // label in center\n      const label = pieSeries.createChild(am4core.Label)\n      label.text = '{values.value.sum}'\n      label.horizontalCenter = 'middle'\n      label.verticalCenter = 'middle'\n      label.fontSize = 20\n      label.fill = am4core.color('#3BAFDA')\n    }\n\n    function am4themesMyTheme (target) {\n      if (target instanceof am4core.ColorSet) {\n        target.list = [\n          am4core.color('#6DF002'),\n          am4core.color('#1AC9E6'),\n          am4core.color('#1DE4BD'),\n          am4core.color('#176BA0'),\n          am4core.color('#142459')\n          // am4core.color('#19AADE')\n        ]\n      }\n    }\n\n    am4core.useTheme(am4themesMyTheme)\n  },\n\n  beforeDestroy () {\n    if (this.chart) {\n      this.chart.dispose()\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}