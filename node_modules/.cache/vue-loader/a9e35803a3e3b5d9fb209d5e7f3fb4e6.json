{"remainingRequest":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/piechart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/piechart.vue","mtime":1636589814985},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGFtNGNvcmUgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC9jb3JlJwppbXBvcnQgKiBhcyBhbTRjaGFydHMgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC9jaGFydHMnCmltcG9ydCBhbTR0aGVtZXNBbmltYXRlZCBmcm9tICdAYW1jaGFydHMvYW1jaGFydHM0L3RoZW1lcy9hbmltYXRlZCcKLy8gaW1wb3J0IG1haW5BcGkgZnJvbSAnLi4vYXBpcy9tYWluQXBpJwovLyBpbXBvcnQgZGFzaGJvYXJkQXBpIGZyb20gJy4uLy4uL2FwaXMvZGFzaGJvYXJkL2Rhc2hib2FyZC1hcGknCmFtNGNvcmUuYWRkTGljZW5zZSgnQ0gxMjM0NTY3JykKYW00Y29yZS51c2VUaGVtZShhbTR0aGVtZXNBbmltYXRlZCkKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZG91Z2hudXQtY2hhcnQnLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGZpcjogWwogICAgICAgICAgewogICAgICAgICAgICAgIGNvdW50cnk6ICdTZXJ2aWNlIE1lbWJlcicsCiAgICAgICAgICAgICAgbGl0cmVzOiAzCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAgIGNvdW50cnk6ICdDb21tYW5kIFN0YWZmJywKICAgICAgICAgICAgICBsaXRyZXM6IDUKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICAgY291bnRyeTogJ1RyYWluaW5nIFRlYW0nLAogICAgICAgICAgICAgIGxpdHJlczogMgogICAgICAgICAgfQogICAgICBdCiAgICB9CiAgfSwKICBwcm9wczogewogICAgLy8gZmlyOiB7CiAgICAvLyAgIHR5cGU6IEFycmF5LAogICAgLy8gICBkZWZhdWx0OiAoKSA9PiBbXQogICAgLy8gfSwKICAgIGxlZ2VuZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICdjaXJjbGUnLAogICAgICB2YWxpZGF0b3I6IHZhbCA9PiBbJ3NxdWFyZScsICdjaXJjbGUnXS5pbmNsdWRlcyh2YWwpCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8gICB0aGlzLmNvdW50c0dldCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyAgIGNvdW50c0dldCgpIHsKICAgIC8vICAgICBtYWluQXBpLmdldENvdW50c1NlcnZpY2UoKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgLy8gICAgICAgICB0aGlzLmZpclswXS5jb3VudHJ5ID0gJ1NlcnZpY2UgTWVtYmVyJwogICAgLy8gICAgICAgICB0aGlzLmZpclswXS5saXRyZXMgPSByZXNwb25zZS5kYXRhLnRvdGFsU2l6ZQogICAgLy8gICAgIH0pCiAgICAvLyAgICAgbWFpbkFwaS5nZXRDb3VudHNDb21tYW5kKCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgIC8vICAgICAgICAgdGhpcy5maXJbMV0uY291bnRyeSA9ICdDb21tYW5kIFN0YWZmJwogICAgLy8gICAgICAgICB0aGlzLmZpclsxXS5saXRyZXMgPSByZXNwb25zZS5kYXRhLnRvdGFsU2l6ZQogICAgLy8gICAgIH0pCiAgICAvLyAgICAgbWFpbkFwaS5nZXRDb3VudHNUcmFpbmluZygpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAvLyAgICAgICAgIHRoaXMuZmlyWzJdLmNvdW50cnkgPSAnVHJhaW5pbmcgVGVhbScKICAgIC8vICAgICAgICAgdGhpcy5maXJbMl0ubGl0cmVzID0gcmVzcG9uc2UuZGF0YS50b3RhbFNpemUKICAgIC8vICAgICB9KQogICAgLy8gICB9LAogIH0sCiAgbW91bnRlZCAoKSB7CiAgICAvLyB0aGlzLmNvdW50c0dldCgpCiAgICBjb25zdCBjb250YWluZXIgPSBhbTRjb3JlLmNyZWF0ZSh0aGlzLiRyZWZzLmNoYXJ0ZGl2LCBhbTRjb3JlLkNvbnRhaW5lcikKICAgIGNvbnRhaW5lci53aWR0aCA9IGFtNGNvcmUucGVyY2VudCgxMDApCiAgICBjb250YWluZXIuaGVpZ2h0ID0gYW00Y29yZS5wZXJjZW50KDEwMCkKICAgIGNvbnRhaW5lci5sYXlvdXQgPSAnaG9yaXpvbnRhbCcKCiAgICAvLyBDcmVhdGUgc3ViLWNvbnRhaW5lcnMKICAgIGNvbnN0IGxlZ2VuZENvbnRhaW5lciA9IGNvbnRhaW5lci5jcmVhdGVDaGlsZChhbTRjb3JlLkNvbnRhaW5lcikKICAgIGxlZ2VuZENvbnRhaW5lci5sYXlvdXQgPSAnYWJzb2x1dGUnIC8vIExheW91dCBvZiBsZWdlbmQgY29udGFpbmVyIHNob3VsZCBiZSBhYnNvbHV0ZSBzbyB0aGF0IGxlZ2VuZHMgY2FuIGJlIGNlbnRlcmVkIHVzaW5nIHRoZSBsZWdlbmRzIGFsaWduIHByb3BlcnR5CiAgICBsZWdlbmRDb250YWluZXIud2lkdGggPSBhbTRjb3JlLnBlcmNlbnQoNTApCiAgICBsZWdlbmRDb250YWluZXIuaGVpZ2h0ID0gYW00Y29yZS5wZXJjZW50KDEwMCkKCiAgICBjb25zdCBjaGFydCA9IGNvbnRhaW5lci5jcmVhdGVDaGlsZChhbTRjaGFydHMuUGllQ2hhcnQpCiAgICBjaGFydC53aWR0aCA9IGFtNGNvcmUucGVyY2VudCg1MCkKICAgIGNoYXJ0LmhlaWdodCA9IGFtNGNvcmUucGVyY2VudCgxMDApCiAgICBjaGFydC5yZXNwb25zaXZlLmVuYWJsZWQgPSB0cnVlCiAgICB0aGlzLmNoYXJ0ID0gY2hhcnQKICAgIGNoYXJ0LmRhdGEgPSB0aGlzLmZpcgogICAgLy8gTGVnZW5kCiAgICBjaGFydC5sZWdlbmQgPSBuZXcgYW00Y2hhcnRzLkxlZ2VuZCgpCiAgICBjaGFydC5sZWdlbmQucG9zaXRpb24gPSAnbGVmdCcgLy8gVGhpcyBpcyB0byBrZWVwIGVhY2ggbGVnZW5kIG9uIGl0cyBvd24gbGluZQogICAgY2hhcnQubGVnZW5kLnBhcmVudCA9IGxlZ2VuZENvbnRhaW5lcgogICAgY2hhcnQubGVnZW5kLmZvbnRTaXplID0gMTIKICAgIGNoYXJ0LmxlZ2VuZC5sYWJlbHMudGVtcGxhdGUud3JhcCA9IHRydWUKICAgIGNoYXJ0LmxlZ2VuZC5sYWJlbHMudGVtcGxhdGUudHJ1bmNhdGUgPSBmYWxzZQogICAgY2hhcnQubGVnZW5kLmxhYmVscy50ZW1wbGF0ZS5maWxsID0gYW00Y29yZS5jb2xvcigncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KScpCiAgICBjaGFydC5sZWdlbmQudmFsdWVMYWJlbHMudGVtcGxhdGUuZmlsbCA9IGFtNGNvcmUuY29sb3IoJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSknKQoKICAgIGNoYXJ0LmxlZ2VuZC52YWxpZ24gPSAnbWlkZGxlJwogICAgY2hhcnQubGVnZW5kLm1heEhlaWdodCA9IDEwMAogICAgY2hhcnQubGVnZW5kLnNjcm9sbGFibGUgPSB0cnVlCiAgICBjaGFydC5sZWdlbmQuY29udGVudEFsaWduID0gJ2xlZnQnCgogICAgY29uc3QgbWFya2VyID0gY2hhcnQubGVnZW5kLm1hcmtlcnMudGVtcGxhdGUuY2hpbGRyZW4uZ2V0SW5kZXgoMCkKICAgIG1hcmtlci5jb3JuZXJSYWRpdXMoMTIsIDEyLCAxMiwgMTIpCiAgICBtYXJrZXIuc3Ryb2tlV2lkdGggPSAyCiAgICBtYXJrZXIuc3Ryb2tlID0gYW00Y29yZS5jb2xvcignI2NjYycpCiAgICAvLyBtYXJrZXIuc3Ryb2tlT3BhY2l0eSA9IDEKCiAgICBjb25zdCBtYXJrZXJUZW1wbGF0ZSA9IGNoYXJ0LmxlZ2VuZC5tYXJrZXJzLnRlbXBsYXRlCiAgICBtYXJrZXJUZW1wbGF0ZS53aWR0aCA9IDEwCiAgICBtYXJrZXJUZW1wbGF0ZS5oZWlnaHQgPSAxMAoKICAgIC8vIEFkZCBhbmQgY29uZmlndXJlIFNlcmllcwogICAgY29uc3QgcGllU2VyaWVzID0gY2hhcnQuc2VyaWVzLnB1c2gobmV3IGFtNGNoYXJ0cy5QaWVTZXJpZXMoKSkKICAgIHBpZVNlcmllcy5kYXRhRmllbGRzLnZhbHVlID0gImxpdHJlcyI7CiAgICBwaWVTZXJpZXMuZGF0YUZpZWxkcy5jYXRlZ29yeSA9ICJjb3VudHJ5IjsKICAgIHBpZVNlcmllcy5zbGljZXMudGVtcGxhdGUucHJvcGVydHlGaWVsZHMuZmlsbCA9ICdjb2xvcicKCiAgICAvLyB0byBkaXNhYmxlIGFycm93cwogICAgcGllU2VyaWVzLmxhYmVscy50ZW1wbGF0ZS5kaXNhYmxlZCA9IHRydWUKICAgIHBpZVNlcmllcy50aWNrcy50ZW1wbGF0ZS5kaXNhYmxlZCA9IHRydWUKCiAgICAvLyB0byBwcmludCB2YWx1ZXMgaW5zdGVhZCBvZiBwZXJjZW50CiAgICBwaWVTZXJpZXMubGVnZW5kU2V0dGluZ3MudmFsdWVUZXh0ID0gJyh7dmFsdWV9KScKCiAgICBpZiAoIXRoaXMuaXNQaWUpIHsKICAgIC8vIExldCdzIGN1dCBhIGhvbGUgaW4gb3VyIFBpZSBjaGFydCB0aGUgc2l6ZSBvZiA0MCUgdGhlIHJhZGl1cwogICAgICBjaGFydC5pbm5lclJhZGl1cyA9IGFtNGNvcmUucGVyY2VudCg1MCkKICAgICAgLy8gbGFiZWwgaW4gY2VudGVyCiAgICAgIGNvbnN0IGxhYmVsID0gcGllU2VyaWVzLmNyZWF0ZUNoaWxkKGFtNGNvcmUuTGFiZWwpCiAgICAgIGxhYmVsLnRleHQgPSAne3ZhbHVlcy52YWx1ZS5zdW19JwogICAgICBsYWJlbC5ob3Jpem9udGFsQ2VudGVyID0gJ21pZGRsZScKICAgICAgbGFiZWwudmVydGljYWxDZW50ZXIgPSAnbWlkZGxlJwogICAgICBsYWJlbC5mb250U2l6ZSA9IDIwCiAgICAgIGxhYmVsLmZpbGwgPSBhbTRjb3JlLmNvbG9yKCcjM0JBRkRBJykKICAgIH0KCiAgICBmdW5jdGlvbiBhbTR0aGVtZXNNeVRoZW1lICh0YXJnZXQpIHsKICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIGFtNGNvcmUuQ29sb3JTZXQpIHsKICAgICAgICB0YXJnZXQubGlzdCA9IFsKICAgICAgICAgIGFtNGNvcmUuY29sb3IoJyM2REYwMDInKSwKICAgICAgICAgIGFtNGNvcmUuY29sb3IoJyMxQUM5RTYnKSwKICAgICAgICAgIGFtNGNvcmUuY29sb3IoJyMxREU0QkQnKSwKICAgICAgICAgIGFtNGNvcmUuY29sb3IoJyMxNzZCQTAnKSwKICAgICAgICAgIGFtNGNvcmUuY29sb3IoJyMxNDI0NTknKQogICAgICAgICAgLy8gYW00Y29yZS5jb2xvcignIzE5QUFERScpCiAgICAgICAgXQogICAgICB9CiAgICB9CgogICAgYW00Y29yZS51c2VUaGVtZShhbTR0aGVtZXNNeVRoZW1lKQogIH0sCgogIGJlZm9yZURlc3Ryb3kgKCkgewogICAgaWYgKHRoaXMuY2hhcnQpIHsKICAgICAgdGhpcy5jaGFydC5kaXNwb3NlKCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["piechart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"piechart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"dougnut chart-container\" ref=\"chartdiv\">{{ fir }}</div>\n</template>\n\n<script>\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated'\n// import mainApi from '../apis/mainApi'\n// import dashboardApi from '../../apis/dashboard/dashboard-api'\nam4core.addLicense('CH1234567')\nam4core.useTheme(am4themesAnimated)\n\nexport default {\n  name: 'doughnut-chart',\n  data () {\n    return {\n      chart: null,\n      fir: [\n          {\n              country: 'Service Member',\n              litres: 3\n          },\n          {\n              country: 'Command Staff',\n              litres: 5\n          },\n          {\n              country: 'Training Team',\n              litres: 2\n          }\n      ]\n    }\n  },\n  props: {\n    // fir: {\n    //   type: Array,\n    //   default: () => []\n    // },\n    legend: {\n      type: String,\n      default: () => 'circle',\n      validator: val => ['square', 'circle'].includes(val)\n    }\n  },\n  created() {\n    //   this.countsGet()\n  },\n  methods: {\n    //   countsGet() {\n    //     mainApi.getCountsService().then((response) => {\n    //         this.fir[0].country = 'Service Member'\n    //         this.fir[0].litres = response.data.totalSize\n    //     })\n    //     mainApi.getCountsCommand().then((response) => {\n    //         this.fir[1].country = 'Command Staff'\n    //         this.fir[1].litres = response.data.totalSize\n    //     })\n    //     mainApi.getCountsTraining().then((response) => {\n    //         this.fir[2].country = 'Training Team'\n    //         this.fir[2].litres = response.data.totalSize\n    //     })\n    //   },\n  },\n  mounted () {\n    // this.countsGet()\n    const container = am4core.create(this.$refs.chartdiv, am4core.Container)\n    container.width = am4core.percent(100)\n    container.height = am4core.percent(100)\n    container.layout = 'horizontal'\n\n    // Create sub-containers\n    const legendContainer = container.createChild(am4core.Container)\n    legendContainer.layout = 'absolute' // Layout of legend container should be absolute so that legends can be centered using the legends align property\n    legendContainer.width = am4core.percent(50)\n    legendContainer.height = am4core.percent(100)\n\n    const chart = container.createChild(am4charts.PieChart)\n    chart.width = am4core.percent(50)\n    chart.height = am4core.percent(100)\n    chart.responsive.enabled = true\n    this.chart = chart\n    chart.data = this.fir\n    // Legend\n    chart.legend = new am4charts.Legend()\n    chart.legend.position = 'left' // This is to keep each legend on its own line\n    chart.legend.parent = legendContainer\n    chart.legend.fontSize = 12\n    chart.legend.labels.template.wrap = true\n    chart.legend.labels.template.truncate = false\n    chart.legend.labels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n    chart.legend.valueLabels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n\n    chart.legend.valign = 'middle'\n    chart.legend.maxHeight = 100\n    chart.legend.scrollable = true\n    chart.legend.contentAlign = 'left'\n\n    const marker = chart.legend.markers.template.children.getIndex(0)\n    marker.cornerRadius(12, 12, 12, 12)\n    marker.strokeWidth = 2\n    marker.stroke = am4core.color('#ccc')\n    // marker.strokeOpacity = 1\n\n    const markerTemplate = chart.legend.markers.template\n    markerTemplate.width = 10\n    markerTemplate.height = 10\n\n    // Add and configure Series\n    const pieSeries = chart.series.push(new am4charts.PieSeries())\n    pieSeries.dataFields.value = \"litres\";\n    pieSeries.dataFields.category = \"country\";\n    pieSeries.slices.template.propertyFields.fill = 'color'\n\n    // to disable arrows\n    pieSeries.labels.template.disabled = true\n    pieSeries.ticks.template.disabled = true\n\n    // to print values instead of percent\n    pieSeries.legendSettings.valueText = '({value})'\n\n    if (!this.isPie) {\n    // Let's cut a hole in our Pie chart the size of 40% the radius\n      chart.innerRadius = am4core.percent(50)\n      // label in center\n      const label = pieSeries.createChild(am4core.Label)\n      label.text = '{values.value.sum}'\n      label.horizontalCenter = 'middle'\n      label.verticalCenter = 'middle'\n      label.fontSize = 20\n      label.fill = am4core.color('#3BAFDA')\n    }\n\n    function am4themesMyTheme (target) {\n      if (target instanceof am4core.ColorSet) {\n        target.list = [\n          am4core.color('#6DF002'),\n          am4core.color('#1AC9E6'),\n          am4core.color('#1DE4BD'),\n          am4core.color('#176BA0'),\n          am4core.color('#142459')\n          // am4core.color('#19AADE')\n        ]\n      }\n    }\n\n    am4core.useTheme(am4themesMyTheme)\n  },\n\n  beforeDestroy () {\n    if (this.chart) {\n      this.chart.dispose()\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}