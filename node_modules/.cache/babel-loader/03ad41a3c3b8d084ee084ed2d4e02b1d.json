{"remainingRequest":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/thread-loader/dist/cjs.js!/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/babel-loader/lib/index.js!/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/piechart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/piechart.vue","mtime":1636589814985},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsLmpzIjsKLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgYW00Y29yZSBmcm9tICdAYW1jaGFydHMvYW1jaGFydHM0L2NvcmUnOwppbXBvcnQgKiBhcyBhbTRjaGFydHMgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC9jaGFydHMnOwppbXBvcnQgYW00dGhlbWVzQW5pbWF0ZWQgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC90aGVtZXMvYW5pbWF0ZWQnOyAvLyBpbXBvcnQgbWFpbkFwaSBmcm9tICcuLi9hcGlzL21haW5BcGknCi8vIGltcG9ydCBkYXNoYm9hcmRBcGkgZnJvbSAnLi4vLi4vYXBpcy9kYXNoYm9hcmQvZGFzaGJvYXJkLWFwaScKCmFtNGNvcmUuYWRkTGljZW5zZSgnQ0gxMjM0NTY3Jyk7CmFtNGNvcmUudXNlVGhlbWUoYW00dGhlbWVzQW5pbWF0ZWQpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2RvdWdobnV0LWNoYXJ0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGZpcjogW3sKICAgICAgICBjb3VudHJ5OiAnU2VydmljZSBNZW1iZXInLAogICAgICAgIGxpdHJlczogMwogICAgICB9LCB7CiAgICAgICAgY291bnRyeTogJ0NvbW1hbmQgU3RhZmYnLAogICAgICAgIGxpdHJlczogNQogICAgICB9LCB7CiAgICAgICAgY291bnRyeTogJ1RyYWluaW5nIFRlYW0nLAogICAgICAgIGxpdHJlczogMgogICAgICB9XQogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICAvLyBmaXI6IHsKICAgIC8vICAgdHlwZTogQXJyYXksCiAgICAvLyAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICAvLyB9LAogICAgbGVnZW5kOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICdjaXJjbGUnOwogICAgICB9LAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpIHsKICAgICAgICByZXR1cm4gWydzcXVhcmUnLCAnY2lyY2xlJ10uaW5jbHVkZXModmFsKTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsvLyAgIHRoaXMuY291bnRzR2V0KCkKICB9LAogIG1ldGhvZHM6IHsvLyAgIGNvdW50c0dldCgpIHsKICAgIC8vICAgICBtYWluQXBpLmdldENvdW50c1NlcnZpY2UoKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgLy8gICAgICAgICB0aGlzLmZpclswXS5jb3VudHJ5ID0gJ1NlcnZpY2UgTWVtYmVyJwogICAgLy8gICAgICAgICB0aGlzLmZpclswXS5saXRyZXMgPSByZXNwb25zZS5kYXRhLnRvdGFsU2l6ZQogICAgLy8gICAgIH0pCiAgICAvLyAgICAgbWFpbkFwaS5nZXRDb3VudHNDb21tYW5kKCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgIC8vICAgICAgICAgdGhpcy5maXJbMV0uY291bnRyeSA9ICdDb21tYW5kIFN0YWZmJwogICAgLy8gICAgICAgICB0aGlzLmZpclsxXS5saXRyZXMgPSByZXNwb25zZS5kYXRhLnRvdGFsU2l6ZQogICAgLy8gICAgIH0pCiAgICAvLyAgICAgbWFpbkFwaS5nZXRDb3VudHNUcmFpbmluZygpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAvLyAgICAgICAgIHRoaXMuZmlyWzJdLmNvdW50cnkgPSAnVHJhaW5pbmcgVGVhbScKICAgIC8vICAgICAgICAgdGhpcy5maXJbMl0ubGl0cmVzID0gcmVzcG9uc2UuZGF0YS50b3RhbFNpemUKICAgIC8vICAgICB9KQogICAgLy8gICB9LAogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vIHRoaXMuY291bnRzR2V0KCkKICAgIHZhciBjb250YWluZXIgPSBhbTRjb3JlLmNyZWF0ZSh0aGlzLiRyZWZzLmNoYXJ0ZGl2LCBhbTRjb3JlLkNvbnRhaW5lcik7CiAgICBjb250YWluZXIud2lkdGggPSBhbTRjb3JlLnBlcmNlbnQoMTAwKTsKICAgIGNvbnRhaW5lci5oZWlnaHQgPSBhbTRjb3JlLnBlcmNlbnQoMTAwKTsKICAgIGNvbnRhaW5lci5sYXlvdXQgPSAnaG9yaXpvbnRhbCc7IC8vIENyZWF0ZSBzdWItY29udGFpbmVycwoKICAgIHZhciBsZWdlbmRDb250YWluZXIgPSBjb250YWluZXIuY3JlYXRlQ2hpbGQoYW00Y29yZS5Db250YWluZXIpOwogICAgbGVnZW5kQ29udGFpbmVyLmxheW91dCA9ICdhYnNvbHV0ZSc7IC8vIExheW91dCBvZiBsZWdlbmQgY29udGFpbmVyIHNob3VsZCBiZSBhYnNvbHV0ZSBzbyB0aGF0IGxlZ2VuZHMgY2FuIGJlIGNlbnRlcmVkIHVzaW5nIHRoZSBsZWdlbmRzIGFsaWduIHByb3BlcnR5CgogICAgbGVnZW5kQ29udGFpbmVyLndpZHRoID0gYW00Y29yZS5wZXJjZW50KDUwKTsKICAgIGxlZ2VuZENvbnRhaW5lci5oZWlnaHQgPSBhbTRjb3JlLnBlcmNlbnQoMTAwKTsKICAgIHZhciBjaGFydCA9IGNvbnRhaW5lci5jcmVhdGVDaGlsZChhbTRjaGFydHMuUGllQ2hhcnQpOwogICAgY2hhcnQud2lkdGggPSBhbTRjb3JlLnBlcmNlbnQoNTApOwogICAgY2hhcnQuaGVpZ2h0ID0gYW00Y29yZS5wZXJjZW50KDEwMCk7CiAgICBjaGFydC5yZXNwb25zaXZlLmVuYWJsZWQgPSB0cnVlOwogICAgdGhpcy5jaGFydCA9IGNoYXJ0OwogICAgY2hhcnQuZGF0YSA9IHRoaXMuZmlyOyAvLyBMZWdlbmQKCiAgICBjaGFydC5sZWdlbmQgPSBuZXcgYW00Y2hhcnRzLkxlZ2VuZCgpOwogICAgY2hhcnQubGVnZW5kLnBvc2l0aW9uID0gJ2xlZnQnOyAvLyBUaGlzIGlzIHRvIGtlZXAgZWFjaCBsZWdlbmQgb24gaXRzIG93biBsaW5lCgogICAgY2hhcnQubGVnZW5kLnBhcmVudCA9IGxlZ2VuZENvbnRhaW5lcjsKICAgIGNoYXJ0LmxlZ2VuZC5mb250U2l6ZSA9IDEyOwogICAgY2hhcnQubGVnZW5kLmxhYmVscy50ZW1wbGF0ZS53cmFwID0gdHJ1ZTsKICAgIGNoYXJ0LmxlZ2VuZC5sYWJlbHMudGVtcGxhdGUudHJ1bmNhdGUgPSBmYWxzZTsKICAgIGNoYXJ0LmxlZ2VuZC5sYWJlbHMudGVtcGxhdGUuZmlsbCA9IGFtNGNvcmUuY29sb3IoJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSknKTsKICAgIGNoYXJ0LmxlZ2VuZC52YWx1ZUxhYmVscy50ZW1wbGF0ZS5maWxsID0gYW00Y29yZS5jb2xvcigncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KScpOwogICAgY2hhcnQubGVnZW5kLnZhbGlnbiA9ICdtaWRkbGUnOwogICAgY2hhcnQubGVnZW5kLm1heEhlaWdodCA9IDEwMDsKICAgIGNoYXJ0LmxlZ2VuZC5zY3JvbGxhYmxlID0gdHJ1ZTsKICAgIGNoYXJ0LmxlZ2VuZC5jb250ZW50QWxpZ24gPSAnbGVmdCc7CiAgICB2YXIgbWFya2VyID0gY2hhcnQubGVnZW5kLm1hcmtlcnMudGVtcGxhdGUuY2hpbGRyZW4uZ2V0SW5kZXgoMCk7CiAgICBtYXJrZXIuY29ybmVyUmFkaXVzKDEyLCAxMiwgMTIsIDEyKTsKICAgIG1hcmtlci5zdHJva2VXaWR0aCA9IDI7CiAgICBtYXJrZXIuc3Ryb2tlID0gYW00Y29yZS5jb2xvcignI2NjYycpOyAvLyBtYXJrZXIuc3Ryb2tlT3BhY2l0eSA9IDEKCiAgICB2YXIgbWFya2VyVGVtcGxhdGUgPSBjaGFydC5sZWdlbmQubWFya2Vycy50ZW1wbGF0ZTsKICAgIG1hcmtlclRlbXBsYXRlLndpZHRoID0gMTA7CiAgICBtYXJrZXJUZW1wbGF0ZS5oZWlnaHQgPSAxMDsgLy8gQWRkIGFuZCBjb25maWd1cmUgU2VyaWVzCgogICAgdmFyIHBpZVNlcmllcyA9IGNoYXJ0LnNlcmllcy5wdXNoKG5ldyBhbTRjaGFydHMuUGllU2VyaWVzKCkpOwogICAgcGllU2VyaWVzLmRhdGFGaWVsZHMudmFsdWUgPSAibGl0cmVzIjsKICAgIHBpZVNlcmllcy5kYXRhRmllbGRzLmNhdGVnb3J5ID0gImNvdW50cnkiOwogICAgcGllU2VyaWVzLnNsaWNlcy50ZW1wbGF0ZS5wcm9wZXJ0eUZpZWxkcy5maWxsID0gJ2NvbG9yJzsgLy8gdG8gZGlzYWJsZSBhcnJvd3MKCiAgICBwaWVTZXJpZXMubGFiZWxzLnRlbXBsYXRlLmRpc2FibGVkID0gdHJ1ZTsKICAgIHBpZVNlcmllcy50aWNrcy50ZW1wbGF0ZS5kaXNhYmxlZCA9IHRydWU7IC8vIHRvIHByaW50IHZhbHVlcyBpbnN0ZWFkIG9mIHBlcmNlbnQKCiAgICBwaWVTZXJpZXMubGVnZW5kU2V0dGluZ3MudmFsdWVUZXh0ID0gJyh7dmFsdWV9KSc7CgogICAgaWYgKCF0aGlzLmlzUGllKSB7CiAgICAgIC8vIExldCdzIGN1dCBhIGhvbGUgaW4gb3VyIFBpZSBjaGFydCB0aGUgc2l6ZSBvZiA0MCUgdGhlIHJhZGl1cwogICAgICBjaGFydC5pbm5lclJhZGl1cyA9IGFtNGNvcmUucGVyY2VudCg1MCk7IC8vIGxhYmVsIGluIGNlbnRlcgoKICAgICAgdmFyIGxhYmVsID0gcGllU2VyaWVzLmNyZWF0ZUNoaWxkKGFtNGNvcmUuTGFiZWwpOwogICAgICBsYWJlbC50ZXh0ID0gJ3t2YWx1ZXMudmFsdWUuc3VtfSc7CiAgICAgIGxhYmVsLmhvcml6b250YWxDZW50ZXIgPSAnbWlkZGxlJzsKICAgICAgbGFiZWwudmVydGljYWxDZW50ZXIgPSAnbWlkZGxlJzsKICAgICAgbGFiZWwuZm9udFNpemUgPSAyMDsKICAgICAgbGFiZWwuZmlsbCA9IGFtNGNvcmUuY29sb3IoJyMzQkFGREEnKTsKICAgIH0KCiAgICBmdW5jdGlvbiBhbTR0aGVtZXNNeVRoZW1lKHRhcmdldCkgewogICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgYW00Y29yZS5Db2xvclNldCkgewogICAgICAgIHRhcmdldC5saXN0ID0gW2FtNGNvcmUuY29sb3IoJyM2REYwMDInKSwgYW00Y29yZS5jb2xvcignIzFBQzlFNicpLCBhbTRjb3JlLmNvbG9yKCcjMURFNEJEJyksIGFtNGNvcmUuY29sb3IoJyMxNzZCQTAnKSwgYW00Y29yZS5jb2xvcignIzE0MjQ1OScpIC8vIGFtNGNvcmUuY29sb3IoJyMxOUFBREUnKQogICAgICAgIF07CiAgICAgIH0KICAgIH0KCiAgICBhbTRjb3JlLnVzZVRoZW1lKGFtNHRoZW1lc015VGhlbWUpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICh0aGlzLmNoYXJ0KSB7CiAgICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["piechart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dougnut chart-container\" ref=\"chartdiv\">{{ fir }}</div>\n</template>\n\n<script>\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated'\n// import mainApi from '../apis/mainApi'\n// import dashboardApi from '../../apis/dashboard/dashboard-api'\nam4core.addLicense('CH1234567')\nam4core.useTheme(am4themesAnimated)\n\nexport default {\n  name: 'doughnut-chart',\n  data () {\n    return {\n      chart: null,\n      fir: [\n          {\n              country: 'Service Member',\n              litres: 3\n          },\n          {\n              country: 'Command Staff',\n              litres: 5\n          },\n          {\n              country: 'Training Team',\n              litres: 2\n          }\n      ]\n    }\n  },\n  props: {\n    // fir: {\n    //   type: Array,\n    //   default: () => []\n    // },\n    legend: {\n      type: String,\n      default: () => 'circle',\n      validator: val => ['square', 'circle'].includes(val)\n    }\n  },\n  created() {\n    //   this.countsGet()\n  },\n  methods: {\n    //   countsGet() {\n    //     mainApi.getCountsService().then((response) => {\n    //         this.fir[0].country = 'Service Member'\n    //         this.fir[0].litres = response.data.totalSize\n    //     })\n    //     mainApi.getCountsCommand().then((response) => {\n    //         this.fir[1].country = 'Command Staff'\n    //         this.fir[1].litres = response.data.totalSize\n    //     })\n    //     mainApi.getCountsTraining().then((response) => {\n    //         this.fir[2].country = 'Training Team'\n    //         this.fir[2].litres = response.data.totalSize\n    //     })\n    //   },\n  },\n  mounted () {\n    // this.countsGet()\n    const container = am4core.create(this.$refs.chartdiv, am4core.Container)\n    container.width = am4core.percent(100)\n    container.height = am4core.percent(100)\n    container.layout = 'horizontal'\n\n    // Create sub-containers\n    const legendContainer = container.createChild(am4core.Container)\n    legendContainer.layout = 'absolute' // Layout of legend container should be absolute so that legends can be centered using the legends align property\n    legendContainer.width = am4core.percent(50)\n    legendContainer.height = am4core.percent(100)\n\n    const chart = container.createChild(am4charts.PieChart)\n    chart.width = am4core.percent(50)\n    chart.height = am4core.percent(100)\n    chart.responsive.enabled = true\n    this.chart = chart\n    chart.data = this.fir\n    // Legend\n    chart.legend = new am4charts.Legend()\n    chart.legend.position = 'left' // This is to keep each legend on its own line\n    chart.legend.parent = legendContainer\n    chart.legend.fontSize = 12\n    chart.legend.labels.template.wrap = true\n    chart.legend.labels.template.truncate = false\n    chart.legend.labels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n    chart.legend.valueLabels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n\n    chart.legend.valign = 'middle'\n    chart.legend.maxHeight = 100\n    chart.legend.scrollable = true\n    chart.legend.contentAlign = 'left'\n\n    const marker = chart.legend.markers.template.children.getIndex(0)\n    marker.cornerRadius(12, 12, 12, 12)\n    marker.strokeWidth = 2\n    marker.stroke = am4core.color('#ccc')\n    // marker.strokeOpacity = 1\n\n    const markerTemplate = chart.legend.markers.template\n    markerTemplate.width = 10\n    markerTemplate.height = 10\n\n    // Add and configure Series\n    const pieSeries = chart.series.push(new am4charts.PieSeries())\n    pieSeries.dataFields.value = \"litres\";\n    pieSeries.dataFields.category = \"country\";\n    pieSeries.slices.template.propertyFields.fill = 'color'\n\n    // to disable arrows\n    pieSeries.labels.template.disabled = true\n    pieSeries.ticks.template.disabled = true\n\n    // to print values instead of percent\n    pieSeries.legendSettings.valueText = '({value})'\n\n    if (!this.isPie) {\n    // Let's cut a hole in our Pie chart the size of 40% the radius\n      chart.innerRadius = am4core.percent(50)\n      // label in center\n      const label = pieSeries.createChild(am4core.Label)\n      label.text = '{values.value.sum}'\n      label.horizontalCenter = 'middle'\n      label.verticalCenter = 'middle'\n      label.fontSize = 20\n      label.fill = am4core.color('#3BAFDA')\n    }\n\n    function am4themesMyTheme (target) {\n      if (target instanceof am4core.ColorSet) {\n        target.list = [\n          am4core.color('#6DF002'),\n          am4core.color('#1AC9E6'),\n          am4core.color('#1DE4BD'),\n          am4core.color('#176BA0'),\n          am4core.color('#142459')\n          // am4core.color('#19AADE')\n        ]\n      }\n    }\n\n    am4core.useTheme(am4themesMyTheme)\n  },\n\n  beforeDestroy () {\n    if (this.chart) {\n      this.chart.dispose()\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}