{"remainingRequest":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/babel-loader/lib/index.js!/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/piechart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/src/components/piechart.vue","mtime":1636694582562},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lakshaynanda/Desktop/CSG/californiastateguard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsLmpzIjsKLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgYW00Y29yZSBmcm9tICdAYW1jaGFydHMvYW1jaGFydHM0L2NvcmUnOwppbXBvcnQgKiBhcyBhbTRjaGFydHMgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC9jaGFydHMnOwppbXBvcnQgYW00dGhlbWVzQW5pbWF0ZWQgZnJvbSAnQGFtY2hhcnRzL2FtY2hhcnRzNC90aGVtZXMvYW5pbWF0ZWQnOyAvLyBpbXBvcnQgbWFpbkFwaSBmcm9tICcuLi9hcGlzL21haW5BcGknCi8vIGltcG9ydCBkYXNoYm9hcmRBcGkgZnJvbSAnLi4vLi4vYXBpcy9kYXNoYm9hcmQvZGFzaGJvYXJkLWFwaScKCmFtNGNvcmUuYWRkTGljZW5zZSgnQ0gxMjM0NTY3Jyk7CmFtNGNvcmUudXNlVGhlbWUoYW00dGhlbWVzQW5pbWF0ZWQpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2RvdWdobnV0LWNoYXJ0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwgLy8gZmlyOiBbCiAgICAgIC8vICAgICB7CiAgICAgIC8vICAgICAgICAgY291bnRyeTogJ1NlcnZpY2UgTWVtYmVyJywKICAgICAgLy8gICAgICAgICBsaXRyZXM6IDMKICAgICAgLy8gICAgIH0sCiAgICAgIC8vICAgICB7CiAgICAgIC8vICAgICAgICAgY291bnRyeTogJ0NvbW1hbmQgU3RhZmYnLAogICAgICAvLyAgICAgICAgIGxpdHJlczogNQogICAgICAvLyAgICAgfSwKICAgICAgLy8gICAgIHsKICAgICAgLy8gICAgICAgICBjb3VudHJ5OiAnVHJhaW5pbmcgVGVhbScsCiAgICAgIC8vICAgICAgICAgbGl0cmVzOiAyCiAgICAgIC8vICAgICB9CiAgICAgIC8vIF0KCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIC8vIGZpcjogewogICAgLy8gICB0eXBlOiBBcnJheSwKICAgIC8vICAgZGVmYXVsdDogKCkgPT4gW10KICAgIC8vIH0sCiAgICBsZWdlbmQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gJ2NpcmNsZSc7CiAgICAgIH0sCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkgewogICAgICAgIHJldHVybiBbJ3NxdWFyZScsICdjaXJjbGUnXS5pbmNsdWRlcyh2YWwpOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgey8vICAgdGhpcy5jb3VudHNHZXQoKQogIH0sCiAgbWV0aG9kczogey8vICAgY291bnRzR2V0KCkgewogICAgLy8gICAgIG1haW5BcGkuZ2V0Q291bnRzU2VydmljZSgpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAvLyAgICAgICAgIHRoaXMuZmlyWzBdLmNvdW50cnkgPSAnU2VydmljZSBNZW1iZXInCiAgICAvLyAgICAgICAgIHRoaXMuZmlyWzBdLmxpdHJlcyA9IHJlc3BvbnNlLmRhdGEudG90YWxTaXplCiAgICAvLyAgICAgfSkKICAgIC8vICAgICBtYWluQXBpLmdldENvdW50c0NvbW1hbmQoKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgLy8gICAgICAgICB0aGlzLmZpclsxXS5jb3VudHJ5ID0gJ0NvbW1hbmQgU3RhZmYnCiAgICAvLyAgICAgICAgIHRoaXMuZmlyWzFdLmxpdHJlcyA9IHJlc3BvbnNlLmRhdGEudG90YWxTaXplCiAgICAvLyAgICAgfSkKICAgIC8vICAgICBtYWluQXBpLmdldENvdW50c1RyYWluaW5nKCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgIC8vICAgICAgICAgdGhpcy5maXJbMl0uY291bnRyeSA9ICdUcmFpbmluZyBUZWFtJwogICAgLy8gICAgICAgICB0aGlzLmZpclsyXS5saXRyZXMgPSByZXNwb25zZS5kYXRhLnRvdGFsU2l6ZQogICAgLy8gICAgIH0pCiAgICAvLyAgIH0sCiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gdGhpcy5jb3VudHNHZXQoKQogICAgdmFyIGNvbnRhaW5lciA9IGFtNGNvcmUuY3JlYXRlKHRoaXMuJHJlZnMuY2hhcnRkaXYsIGFtNGNvcmUuQ29udGFpbmVyKTsKICAgIGNvbnRhaW5lci53aWR0aCA9IGFtNGNvcmUucGVyY2VudCgxMDApOwogICAgY29udGFpbmVyLmhlaWdodCA9IGFtNGNvcmUucGVyY2VudCgxMDApOwogICAgY29udGFpbmVyLmxheW91dCA9ICdob3Jpem9udGFsJzsgLy8gQ3JlYXRlIHN1Yi1jb250YWluZXJzCgogICAgdmFyIGxlZ2VuZENvbnRhaW5lciA9IGNvbnRhaW5lci5jcmVhdGVDaGlsZChhbTRjb3JlLkNvbnRhaW5lcik7CiAgICBsZWdlbmRDb250YWluZXIubGF5b3V0ID0gJ2Fic29sdXRlJzsgLy8gTGF5b3V0IG9mIGxlZ2VuZCBjb250YWluZXIgc2hvdWxkIGJlIGFic29sdXRlIHNvIHRoYXQgbGVnZW5kcyBjYW4gYmUgY2VudGVyZWQgdXNpbmcgdGhlIGxlZ2VuZHMgYWxpZ24gcHJvcGVydHkKCiAgICBsZWdlbmRDb250YWluZXIud2lkdGggPSBhbTRjb3JlLnBlcmNlbnQoNTApOwogICAgbGVnZW5kQ29udGFpbmVyLmhlaWdodCA9IGFtNGNvcmUucGVyY2VudCgxMDApOwogICAgdmFyIGNoYXJ0ID0gY29udGFpbmVyLmNyZWF0ZUNoaWxkKGFtNGNoYXJ0cy5QaWVDaGFydCk7CiAgICBjaGFydC53aWR0aCA9IGFtNGNvcmUucGVyY2VudCg1MCk7CiAgICBjaGFydC5oZWlnaHQgPSBhbTRjb3JlLnBlcmNlbnQoMTAwKTsKICAgIGNoYXJ0LnJlc3BvbnNpdmUuZW5hYmxlZCA9IHRydWU7CiAgICB0aGlzLmNoYXJ0ID0gY2hhcnQ7CiAgICBjaGFydC5kYXRhID0gdGhpcy5maXI7IC8vIExlZ2VuZAoKICAgIGNoYXJ0LmxlZ2VuZCA9IG5ldyBhbTRjaGFydHMuTGVnZW5kKCk7CiAgICBjaGFydC5sZWdlbmQucG9zaXRpb24gPSAnbGVmdCc7IC8vIFRoaXMgaXMgdG8ga2VlcCBlYWNoIGxlZ2VuZCBvbiBpdHMgb3duIGxpbmUKCiAgICBjaGFydC5sZWdlbmQucGFyZW50ID0gbGVnZW5kQ29udGFpbmVyOwogICAgY2hhcnQubGVnZW5kLmZvbnRTaXplID0gMTI7CiAgICBjaGFydC5sZWdlbmQubGFiZWxzLnRlbXBsYXRlLndyYXAgPSB0cnVlOwogICAgY2hhcnQubGVnZW5kLmxhYmVscy50ZW1wbGF0ZS50cnVuY2F0ZSA9IGZhbHNlOwogICAgY2hhcnQubGVnZW5kLmxhYmVscy50ZW1wbGF0ZS5maWxsID0gYW00Y29yZS5jb2xvcigncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KScpOwogICAgY2hhcnQubGVnZW5kLnZhbHVlTGFiZWxzLnRlbXBsYXRlLmZpbGwgPSBhbTRjb3JlLmNvbG9yKCdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpJyk7CiAgICBjaGFydC5sZWdlbmQudmFsaWduID0gJ21pZGRsZSc7CiAgICBjaGFydC5sZWdlbmQubWF4SGVpZ2h0ID0gMTAwOwogICAgY2hhcnQubGVnZW5kLnNjcm9sbGFibGUgPSB0cnVlOwogICAgY2hhcnQubGVnZW5kLmNvbnRlbnRBbGlnbiA9ICdsZWZ0JzsKICAgIHZhciBtYXJrZXIgPSBjaGFydC5sZWdlbmQubWFya2Vycy50ZW1wbGF0ZS5jaGlsZHJlbi5nZXRJbmRleCgwKTsKICAgIG1hcmtlci5jb3JuZXJSYWRpdXMoMTIsIDEyLCAxMiwgMTIpOwogICAgbWFya2VyLnN0cm9rZVdpZHRoID0gMjsKICAgIG1hcmtlci5zdHJva2UgPSBhbTRjb3JlLmNvbG9yKCcjY2NjJyk7IC8vIG1hcmtlci5zdHJva2VPcGFjaXR5ID0gMQoKICAgIHZhciBtYXJrZXJUZW1wbGF0ZSA9IGNoYXJ0LmxlZ2VuZC5tYXJrZXJzLnRlbXBsYXRlOwogICAgbWFya2VyVGVtcGxhdGUud2lkdGggPSAxMDsKICAgIG1hcmtlclRlbXBsYXRlLmhlaWdodCA9IDEwOyAvLyBBZGQgYW5kIGNvbmZpZ3VyZSBTZXJpZXMKCiAgICB2YXIgcGllU2VyaWVzID0gY2hhcnQuc2VyaWVzLnB1c2gobmV3IGFtNGNoYXJ0cy5QaWVTZXJpZXMoKSk7CiAgICBwaWVTZXJpZXMuZGF0YUZpZWxkcy52YWx1ZSA9ICJsaXRyZXMiOwogICAgcGllU2VyaWVzLmRhdGFGaWVsZHMuY2F0ZWdvcnkgPSAiY291bnRyeSI7CiAgICBwaWVTZXJpZXMuc2xpY2VzLnRlbXBsYXRlLnByb3BlcnR5RmllbGRzLmZpbGwgPSAnY29sb3InOyAvLyB0byBkaXNhYmxlIGFycm93cwoKICAgIHBpZVNlcmllcy5sYWJlbHMudGVtcGxhdGUuZGlzYWJsZWQgPSB0cnVlOwogICAgcGllU2VyaWVzLnRpY2tzLnRlbXBsYXRlLmRpc2FibGVkID0gdHJ1ZTsgLy8gdG8gcHJpbnQgdmFsdWVzIGluc3RlYWQgb2YgcGVyY2VudAoKICAgIHBpZVNlcmllcy5sZWdlbmRTZXR0aW5ncy52YWx1ZVRleHQgPSAnKHt2YWx1ZX0pJzsKCiAgICBpZiAoIXRoaXMuaXNQaWUpIHsKICAgICAgLy8gTGV0J3MgY3V0IGEgaG9sZSBpbiBvdXIgUGllIGNoYXJ0IHRoZSBzaXplIG9mIDQwJSB0aGUgcmFkaXVzCiAgICAgIGNoYXJ0LmlubmVyUmFkaXVzID0gYW00Y29yZS5wZXJjZW50KDUwKTsgLy8gbGFiZWwgaW4gY2VudGVyCgogICAgICB2YXIgbGFiZWwgPSBwaWVTZXJpZXMuY3JlYXRlQ2hpbGQoYW00Y29yZS5MYWJlbCk7CiAgICAgIGxhYmVsLnRleHQgPSAne3ZhbHVlcy52YWx1ZS5zdW19JzsKICAgICAgbGFiZWwuaG9yaXpvbnRhbENlbnRlciA9ICdtaWRkbGUnOwogICAgICBsYWJlbC52ZXJ0aWNhbENlbnRlciA9ICdtaWRkbGUnOwogICAgICBsYWJlbC5mb250U2l6ZSA9IDIwOwogICAgICBsYWJlbC5maWxsID0gYW00Y29yZS5jb2xvcignIzNCQUZEQScpOwogICAgfQoKICAgIGZ1bmN0aW9uIGFtNHRoZW1lc015VGhlbWUodGFyZ2V0KSB7CiAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBhbTRjb3JlLkNvbG9yU2V0KSB7CiAgICAgICAgdGFyZ2V0Lmxpc3QgPSBbYW00Y29yZS5jb2xvcignIzZERjAwMicpLCBhbTRjb3JlLmNvbG9yKCcjMUFDOUU2JyksIGFtNGNvcmUuY29sb3IoJyMxREU0QkQnKSwgYW00Y29yZS5jb2xvcignIzE3NkJBMCcpLCBhbTRjb3JlLmNvbG9yKCcjMTQyNDU5JykgLy8gYW00Y29yZS5jb2xvcignIzE5QUFERScpCiAgICAgICAgXTsKICAgICAgfQogICAgfQoKICAgIGFtNGNvcmUudXNlVGhlbWUoYW00dGhlbWVzTXlUaGVtZSk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKHRoaXMuY2hhcnQpIHsKICAgICAgdGhpcy5jaGFydC5kaXNwb3NlKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["piechart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dougnut chart-container\" ref=\"chartdiv\">{{ fir }}</div>\n</template>\n\n<script>\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated'\n// import mainApi from '../apis/mainApi'\n// import dashboardApi from '../../apis/dashboard/dashboard-api'\nam4core.addLicense('CH1234567')\nam4core.useTheme(am4themesAnimated)\n\nexport default {\n  name: 'doughnut-chart',\n  data () {\n    return {\n      chart: null,\n      // fir: [\n      //     {\n      //         country: 'Service Member',\n      //         litres: 3\n      //     },\n      //     {\n      //         country: 'Command Staff',\n      //         litres: 5\n      //     },\n      //     {\n      //         country: 'Training Team',\n      //         litres: 2\n      //     }\n      // ]\n    }\n  },\n  props: {\n    // fir: {\n    //   type: Array,\n    //   default: () => []\n    // },\n    legend: {\n      type: String,\n      default: () => 'circle',\n      validator: val => ['square', 'circle'].includes(val)\n    }\n  },\n  created() {\n    //   this.countsGet()\n  },\n  methods: {\n    //   countsGet() {\n    //     mainApi.getCountsService().then((response) => {\n    //         this.fir[0].country = 'Service Member'\n    //         this.fir[0].litres = response.data.totalSize\n    //     })\n    //     mainApi.getCountsCommand().then((response) => {\n    //         this.fir[1].country = 'Command Staff'\n    //         this.fir[1].litres = response.data.totalSize\n    //     })\n    //     mainApi.getCountsTraining().then((response) => {\n    //         this.fir[2].country = 'Training Team'\n    //         this.fir[2].litres = response.data.totalSize\n    //     })\n    //   },\n  },\n  mounted () {\n    // this.countsGet()\n    const container = am4core.create(this.$refs.chartdiv, am4core.Container)\n    container.width = am4core.percent(100)\n    container.height = am4core.percent(100)\n    container.layout = 'horizontal'\n\n    // Create sub-containers\n    const legendContainer = container.createChild(am4core.Container)\n    legendContainer.layout = 'absolute' // Layout of legend container should be absolute so that legends can be centered using the legends align property\n    legendContainer.width = am4core.percent(50)\n    legendContainer.height = am4core.percent(100)\n\n    const chart = container.createChild(am4charts.PieChart)\n    chart.width = am4core.percent(50)\n    chart.height = am4core.percent(100)\n    chart.responsive.enabled = true\n    this.chart = chart\n    chart.data = this.fir\n    // Legend\n    chart.legend = new am4charts.Legend()\n    chart.legend.position = 'left' // This is to keep each legend on its own line\n    chart.legend.parent = legendContainer\n    chart.legend.fontSize = 12\n    chart.legend.labels.template.wrap = true\n    chart.legend.labels.template.truncate = false\n    chart.legend.labels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n    chart.legend.valueLabels.template.fill = am4core.color('rgba(255, 255, 255, 0.75)')\n\n    chart.legend.valign = 'middle'\n    chart.legend.maxHeight = 100\n    chart.legend.scrollable = true\n    chart.legend.contentAlign = 'left'\n\n    const marker = chart.legend.markers.template.children.getIndex(0)\n    marker.cornerRadius(12, 12, 12, 12)\n    marker.strokeWidth = 2\n    marker.stroke = am4core.color('#ccc')\n    // marker.strokeOpacity = 1\n\n    const markerTemplate = chart.legend.markers.template\n    markerTemplate.width = 10\n    markerTemplate.height = 10\n\n    // Add and configure Series\n    const pieSeries = chart.series.push(new am4charts.PieSeries())\n    pieSeries.dataFields.value = \"litres\";\n    pieSeries.dataFields.category = \"country\";\n    pieSeries.slices.template.propertyFields.fill = 'color'\n\n    // to disable arrows\n    pieSeries.labels.template.disabled = true\n    pieSeries.ticks.template.disabled = true\n\n    // to print values instead of percent\n    pieSeries.legendSettings.valueText = '({value})'\n\n    if (!this.isPie) {\n    // Let's cut a hole in our Pie chart the size of 40% the radius\n      chart.innerRadius = am4core.percent(50)\n      // label in center\n      const label = pieSeries.createChild(am4core.Label)\n      label.text = '{values.value.sum}'\n      label.horizontalCenter = 'middle'\n      label.verticalCenter = 'middle'\n      label.fontSize = 20\n      label.fill = am4core.color('#3BAFDA')\n    }\n\n    function am4themesMyTheme (target) {\n      if (target instanceof am4core.ColorSet) {\n        target.list = [\n          am4core.color('#6DF002'),\n          am4core.color('#1AC9E6'),\n          am4core.color('#1DE4BD'),\n          am4core.color('#176BA0'),\n          am4core.color('#142459')\n          // am4core.color('#19AADE')\n        ]\n      }\n    }\n\n    am4core.useTheme(am4themesMyTheme)\n  },\n\n  beforeDestroy () {\n    if (this.chart) {\n      this.chart.dispose()\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}